var World = function(newWidth, newHeight)
{
    // Set the size, in pixels, of each tile in the world
    this.tileWidth = 96;
    this.tileHeight = 96;

	// The pre-made levels are here
	this.rawLevels = [];
	this.rawLevels[0] = new Array(11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 3, 3, 0, 0, 0, 0, 3, 3, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11);
	this.rawLevels[1] = new Array(11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 4, 4, 4, 4, 4, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 3, 3, 0, 3, 3, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 3, 0, 0, 3, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 0, 3, 3, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 5, 0, 0, 0, 6, 11, 5, 0, 0, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11);

    // Hard-coded level data
	this.levelOrigins = [];
	this.levelOrigins[0] = 2 * this.tileWidth;
	this.levelOrigins[1] = 43 * this.tileHeight;

    // Set the try counter
	this.fails = 0;

	// The current level in the game
	this.currentLevel = 0;

	// Set the initial gravity of the world
	this.XG = 0;
	this.YG = 0.6;
	
	// Set the size of the world, in tiles
	this.width = newWidth;
	this.height = newHeight;
	
	// Amount of tile textures in the game
	this.tileImageAmount = 12;
	
	// Level backgrounds
	this.levelBackgrounds = [];
	this.levelBackgrounds[0] = new Image();
	this.levelBackgrounds[0].src = "images/backgrounds/0.png";
	this.levelBackgrounds[1] = new Image();
	this.levelBackgrounds[1].src = "images/backgrounds/9.png";

	// Amount of levels in the game
	this.levelAmount = 2;

	// Create the array of tiles in the level
	// Make a new array that handles each level
	this.levels = [];
	for(var i = 0; i < this.levelAmount; i++)
	{
		console.log("Setting up level " + i);
		
		// Set up a horizontal axis for the level
		this.levels[i] = [];
		
		for(var x = 0; x < this.width; x++)
		{
			// And now a vertical axis
			this.levels[i][x] = [];
			
			for(var y = 0; y < this.height; y++)
			{
				this.levels[i][x][y] = 0;
			}
		}
		
		for(var y = 0; y < this.height; y++)
		{
			for(var x = 0; x < this.width; x++)
			{
				this.levels[i][x][y] = this.rawLevels[i][x + (y * this.width)];
			}
		}
		
		console.log(this.levels[i]);
	}
	
	// Create the tile images
	// Make a new array of tiles
	this.tileImages = [];
	for(var i = 0; i < this.tileImageAmount; i++)
	{
		// The tile will be a new image
		this.tileImages[i] = new Image();
		
		// Set the image to its corresponding file in the game
		this.tileImages[i].src = "images/" + i + ".png";
	}
}

// Function: Reset the world's gravity after a player death
World.prototype.reset = function()
{
    this.XG = 0.0;
    this.YG = 0.6;
}

// Function: Update the world
World.prototype.update = function() {}

// Function: Draw the world
World.prototype.draw = function(displacementX, displacementY, cameraX, cameraY)
{
    for (var x = -this.width; x < this.width; x++)
        for (var y = -this.height; y < this.height; y++)
            context.drawImage(this.levelBackgrounds[this.currentLevel],
                    displacementX + (x * this.tileWidth) - cameraX + (player.X / 2),
                    displacementY + (y * this.tileHeight) - cameraY + (player.Y / 2),
                    this.tileWidth,
                    this.tileHeight);

	// Use a double for loop to loop through every tile in the level
	for(var x = 0; x < this.width; x++)
	{
		for(var y = 0; y < this.height; y++)
		{
			// If the tile is not air... 
			if(this.levels[this.currentLevel][x][y] > 0)
			{
				// Draw it onto the screen
				context.drawImage(this.tileImages[this.levels[this.currentLevel][x][y]],
						displacementX + (x * this.tileWidth) - cameraX,
						displacementY + (y * this.tileHeight) - cameraY,
						this.tileWidth,
						this.tileHeight);
				/*
				context.fillStyle = "#EEE";
				context.fillRect(x * this.tileWidth, y * this.tileHeight, this.tileWidth, this.tileHeight);
				*/
			}
		}
	}
}

// Function: Reverse the gravity in the world
World.prototype.reverseGravity = function()
{
	// The current gravity is reversed
	this.XG *= -1;
	this.YG *= -1;
}
